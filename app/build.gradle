apply plugin: 'com.android.application'

ext.vAppName = 'MyApp';

ext.vMajor = 1
ext.vMidor = 0
ext.vMinor = 0

def computeVersionName() {
    return String.format('%d.%d.%d', vMajor, vMidor, vMinor);

}

def computeVersionCode() {
    def env = System.getenv()
    return env['BUILD_NUMBER'] as Integer ?: 0;

}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        versionCode computeVersionCode()
        versionName computeVersionName()
        project.ext.set("archivesBaseName", vAppName);
        multiDexEnabled true
        applicationId "com.tplink.app"
        minSdkVersion 18
        targetSdkVersion 24
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    if (project.hasProperty("kc100.properties")
            && new File(project.property("kc100.properties")).exists()) {

        Properties props = new Properties()
        props.load(new FileInputStream(file(project.property("kc100.properties"))))

        signingConfigs {
            release {
                storeFile file("/var/lib/jenkins/tplink_kc100_android.jks")
                storePassword props['KSTOREPWD']
                keyAlias "TPLINK_KC100_Android"
                keyPassword props['KEYPWD']
            }
        }

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                shrinkResources true
                signingConfig signingConfigs.release
                zipAlignEnabled true
            }

            dev {
                initWith(buildTypes.release)
                applicationIdSuffix ".dev"
                versionNameSuffix "D"
            }

            debug {
                applicationIdSuffix ".debug"
                versionNameSuffix "D"
            }
            beta {
                initWith(buildTypes.release)
                applicationIdSuffix ".beta"
                versionNameSuffix "B"
            }
        }
    } else {
        buildTypes {
            debug {
                applicationIdSuffix ".dev"
                versionNameSuffix "D"
                debuggable true
            }
        }
    }




    sourceSets {
        debug {
            res.srcDirs = ['res']
        }
        debug.setRoot('build-types/debug')

        beta {
            res.srcDirs = ['res']
        }
        beta.setRoot('build-types/beta')

        dev {
            res.srcDirs = ['res']
        }
        dev.setRoot('build-types/dev')
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'
}
